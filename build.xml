<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="thesis-code">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="thesis-code.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
        <pathelement location="lib/mockito-all-1.10.14.jar"/>
        <pathelement location="lib/weka.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <src path="test"/>
            <classpath refid="thesis-code.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name=".compare">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="clustering.HierAggloTest.8" todir="${junit.output.dir}"/>
            <classpath refid="thesis-code.classpath"/>
        </junit>
    </target>
    <target name="EuclideanDistanceTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="distance.EuclideanDistanceTest" todir="${junit.output.dir}"/>
            <classpath refid="thesis-code.classpath"/>
        </junit>
    </target>
    <target name="HierAggloTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="clustering.HierAggloTest" todir="${junit.output.dir}"/>
            <classpath refid="thesis-code.classpath"/>
        </junit>
    </target>
    <target name="HierAggloTest.testClusterSingleLink">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="clustering.HierAggloTest" todir="${junit.output.dir}"/>
            <classpath refid="thesis-code.classpath"/>
        </junit>
    </target>
    <target name="KMeansTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="clustering.KMeansTest" todir="${junit.output.dir}"/>
            <classpath refid="thesis-code.classpath"/>
        </junit>
    </target>
    <target name="KMedoidsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="clustering.KMedoidsTest" todir="${junit.output.dir}"/>
            <classpath refid="thesis-code.classpath"/>
        </junit>
    </target>
    <target name="ManhattanDistanceTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="distance.ManhattanDistanceTest" todir="${junit.output.dir}"/>
            <classpath refid="thesis-code.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
